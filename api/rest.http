
:host = http://localhost:9000

# getHat
GET :host/api/secretsanta/0
GET :host/api/secretsanta/1
GET :host/api/secretsanta/20
GET :host/api/secretsanta/-5

# putHat
PUT :host/api/secretsanta
Content-Type: application/json;charset=utf-8
{ "owner" :
  { "name" : "brecht"
  , "email" : "services+secretsanta@brechtserckx.be"
  }
, "participants" :
  [ { "name" : "brecht1"
    , "email" : "services+secretsanta1@brechtserckx.be"
    }
  , { "name" : "brecht2"
    , "email" : "services+secretsanta2@brechtserckx.be"
    }
  , { "name" : "brecht3"
    , "email" : "services+secretsanta3@brechtserckx.be"
    }
  ]
}

# match
GET :host/api/secretsanta/0/match


# TableBooking:CreateBookingRequest
# Create a booking request at a specified datetime for a given number of guests. Only allowed for locations with an active website. 
# Booking creations are disallowed when the specified datetime is not compatible with the schedule of the business. 
# params:
## urn: Business urn
# Headers: 
## X-Domain: Valid domain for the given location 
## X-Bus-URN: BusinessURN (in this case the LocationURN)
# Body: JSON 
## user.firstname: NonEmptyText; required 
## user.lastname: NonEmptyText; required 
## user.email: Email; required 
## user.phone: Phone; required 
## user.gdpr: Bool; required 
## user.newsletter: Bool; required 
## user.lang_code: LangCode; required 
POST :publicHost/api/v2/table-booking/booking/create
Content-Type: application/json;charset=utf-8
X-Domain: foobar.com
X-Bus-URN: urn:centralapp:company:15801080:location:316941
{ "user" : { "firstname" : "Cobra" 
           , "lastname" : "Cobra" 
           , "email" : "cobra@snake.com" 
           , "phone" : "+32 488 43 00 00" 
           , "gdpr" : true 
           , "newsletter" : true
           , "lang_code" : "fr"
           }
, "payload" : { "num_guests": 10, "datetime" : "2019-10-23T11:00" }
}


###############
# Priavte API #
###############

# InboxItem 
## Common fields: 
## inbox_status: status of the InboxItem in the inbox; ItemInboxStatus, enum: {UNARCHIVED|ARCHIVED}
## type: type of the InboxItem, enum: {TABLE_BOOKING_REQUEST}
## updated: Maybe ISOTimestamp 
## created: ISOTimestamp
## payload: <TypedPayload>
## TypedPayload 
## TABLE_BOOKING_REQUEST
### status: the status of the TableBookingRequest; TableBookingRequestStatus enum: {REQUESTED|DENIED|CONFIRMED}
### start_time: the local start time of the TableBookingRequest (specific to the TZ of the Business) 
### created: ISOTimestamp
### updated: Maybe ISOTimestamp
### id: unique ID 
### num_guests: Number of guests in the TableBookingRequest
### TableBookingRequestHistItem 
#### type: enum {T_B_R_CREATED|T_B_R_DENIED|T_B_R_CONFIRMED|T_B_R_ARCHIVED|T_B_R_UNARCHIVED}
#### time: time of event, ISOTimestamp
#### context: JSON, will contain the context under which the event happened (UserId) (if available)

# Get the paged transactional inbox 
# Params: 
## page: integer, defaults to 0 
## limit: integer, defaults to 24 
## urn: BusinessURN (company or location URN)
# Body: JSON 
#
## SORTING: optional, but if the sort field is present, it must either be a `null` or a valid sort object
## Default: updated, asc
## sort.by: {created|updated}
## sort.ord: {asc|desc} 
#
## FILTERING: all fields are optional. No filters are applied if none of the fields are present.
## filt.user_firstname: case-insensitive substring match on user's firstname 
## filt.user_lastname: case-insensitive substring match on user's lastname 
## filt.user_email: case-insensitive substring match on user's email 
## filt.user_lang_code: match on user lang_code 
## filt.user_gdpr: match on user GDPR flag 
## filt.user_newsletter: match on user newsletter flag 
## filt.updated_lte: ISOTimestamp, constrain updated <= 
## filt.updated_gte: ISOTimestamp, constrain updated >= 
## filt.created_lte: ISOTimestamp, constrain created <= 
## filt.created_gte: ISOTimestamp, constrain created >= 
## filt.types: Filter on InboxItemTypes (list, empty will include all types): {TABLE_BOOKING_REQUEST}
## filt.inbox_status: filter on ItemInboxStatus: {ARCHIVED|UNARCHIVED}
POST :privateHost/api/v2/inbox?urn=urn:centralapp:company:15801080:location:316941&limit=100&page=0
Content-Type: application/json;charset=utf-8
{ "sort" : { "by" : "created"
          , "ord" : "desc"
          }
, "filter" : { "user_email" : "cobra"
             , "inbox_status" : "ARCHIVED"
             }
}

# Toggle the ItemInboxStatus of an InboxItem (internal)
# Params: 
## urn: BusinessURN 
# Body: JSON 
## id: InboxItemId 
PUT :privateHost/api/v2/inbox/inbox-status?urn=urn:centralapp:company:15801080:location:316941
Content-Type: application/json;charset=utf-8
{ "payload" : { "id" : "table_booking_request:7891044409230229504"
              , "status" :  "CONFIRMED"
              }
, "declarations" : {
    "user:194": {
        "d": [
             {
                "c": [
                    "C.READ"
                ],
                "l": [
                    "L.READ"
                ],
                "gs": [
                    "D.SALES",
                    "D.COMPANY.READ"
                ],
                "r": "distributor:centralapp"
            },           
            {
                "c": [
                    "C.READ"
                ],
                "l": [
                    "L.READ"
                ],
                "gs": [
                    "D.SALES",
                    "D.COMPANY.READ"
                ],
                "r": "distributor:deliveroo_be"
            }
        ],
        "ca": {
            "d": [],
            "c": [
                "C.READ",
                "C.WRITE",
                "C.ADMIN"
            ],
            "l": [
                "L.READ",
                "L.WRITE",
                "L.ADMIN"
            ],
            "gs": [
                "CA.LOCATION.ADMIN",
                "CA.DEBUG.PUSH",
                "CA.COMPANY.ADMIN",
                "CA.USER.ADMIN",
                "CA.MANUAL.PUSH"
            ],
            "r": "CA:CA"
        },
        "dist": "distributor:centralapp",
        "lc": "en",
        "u": "user:194"
    }
    }                 
}

# Change the TableBookingRequestStatus 
# Params: 
## urn: BusinessURN 
# Body: JSON 
## id: InboxItemId 
## status: TableBookingRequestStatus 
# Notes: 
## Currently, operations to set the status back to REQUESTED are not supported. This is done in the interest to make clients answer the request. 
## Moreover, this causes ambiguities: what if the status was previously set to CONFIRMED or DENIED and emails were sent out and the client now wants to
## Change the status back to requested?
PUT :privateHost/api/v2/inbox/table-booking/request-status?urn=urn:centralapp:company:15801080:location:316941
Content-Type: application/json;charset=utf-8 
{ "payload" : { "id" : "table_booking_request:7893648039326253056"
              , "status" :  "confirmed"
              }
, "declarations" : {
    "user:194": {
        "d": [
             {
                "c": [
                    "C.READ"
                ],
                "l": [
                    "L.READ"
                ],
                "gs": [
                    "D.SALES",
                    "D.COMPANY.READ"
                ],
                "r": "distributor:centralapp"
            },           
            {
                "c": [
                    "C.READ"
                ],
                "l": [
                    "L.READ"
                ],
                "gs": [
                    "D.SALES",
                    "D.COMPANY.READ"
                ],
                "r": "distributor:deliveroo_be"
            }
        ],
        "ca": {
            "d": [],
            "c": [
                "C.READ",
                "C.WRITE",
                "C.ADMIN"
            ],
            "l": [
                "L.READ",
                "L.WRITE",
                "L.ADMIN"
            ],
            "gs": [
                "CA.LOCATION.ADMIN",
                "CA.DEBUG.PUSH",
                "CA.COMPANY.ADMIN",
                "CA.USER.ADMIN",
                "CA.MANUAL.PUSH"
            ],
            "r": "CA:CA"
        },
        "dist": "distributor:centralapp",
        "lc": "en",
        "u": "user:194"
    }
    }                 
}